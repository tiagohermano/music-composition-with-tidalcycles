let melody = s "superchip(<3 5 7>,8,<0 1 2 3>)" # n "<[f a c e] [d g e c]>"

d1 $ stut "2 4 8" 0.6 (1/8) -- applies a type of delay to a pattern. It has three params 'depth', 'feedback' and 'depth'
   $ sometimes (|+ voice "0.2") -- half of the times each note will have it's 'voice' changed to 0.2 $ s "superchip(<3 5 7>,8,<0 1 2 3>)" # n "<[f a c e] [d g e c]>" release "[0.4 0.5] 0.6" -- the opposite of sustain
   $ melody
   # release "[0.4 0.5] 0.6"
   # voice "0.3 0.4 0.5" -- tone adjustment
   # gain 0.6 -- amp adjustment

d2 $ slow 2
   $ jux (|+ 12) -- juxtapose (applies transformations on the left or right side of the stereo sound) -> This one drops and octave just on the right
   $ (|+ 12) -- drop an octave
   $ rev -- plays the pattern in reverse order
   $ melody
   # sustain 2
   # release 2
   # voice "0.35 0.4 0.45 0"
   # pan (slow 2 $ sine)
   # gain 0.6

d3 $ slow 2
   $ s "supernoise(7,8,<1 3>)" -- simulate crunchy static sounds from chipset music
   # n "-24"
   # release "0.1 0.15 0.2"
   # room 0.4
   # gain 0.6

